SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

CREATE DATABASE IF NOT EXISTS ticketsystem;

USE ticketsystem;

DROP TABLE IF EXISTS userrole;
CREATE TABLE IF NOT EXISTS userrole (
  RoleID INT NOT NULL AUTO_INCREMENT,
  RoleName ENUM('agent', 'customer') NOT NULL,
  PRIMARY KEY (RoleID)
);

DROP TABLE IF EXISTS user;
CREATE TABLE IF NOT EXISTS user (
  UserID INT NOT NULL AUTO_INCREMENT,
  Username VARCHAR(255) NOT NULL,
  Password VARCHAR(255) NOT NULL,
  RoleID INT NULL DEFAULT NULL,
  PRIMARY KEY (UserID),
  INDEX fk_user_role (RoleID),
  CONSTRAINT fk_user_role
    FOREIGN KEY (RoleID)
    REFERENCES userrole (RoleID)
);

DROP TABLE IF EXISTS ticket;
CREATE TABLE IF NOT EXISTS ticket (
  TicketNumber INT UNSIGNED NOT NULL AUTO_INCREMENT,
  UserID INT NULL DEFAULT NULL,
  TicketAgent INT NULL DEFAULT NULL,
  TicketContent VARCHAR(255) NOT NULL,
  State ENUM('open', 'inprogress', 'closed') NOT NULL,
  Created TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  Modified TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (TicketNumber),
  INDEX fk_ticket_user (UserID),
  INDEX fk_ticket_agent (TicketAgent),
  CONSTRAINT fk_ticket_agent
    FOREIGN KEY (TicketAgent)
    REFERENCES user (UserID),
  CONSTRAINT fk_ticket_user
    FOREIGN KEY (UserID)
    REFERENCES user (UserID)
);

DROP TABLE IF EXISTS ticketcomment;
CREATE TABLE IF NOT EXISTS ticketcomment (
  CommentID INT UNSIGNED NOT NULL AUTO_INCREMENT,
  TicketNumber INT UNSIGNED NOT NULL,
  UserID INT NOT NULL,
  CommentContent TEXT NOT NULL,
  CommentDate TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (CommentID),
  INDEX fk_ticketcomment_ticket (TicketNumber),
  INDEX fk_ticketcomment_user (UserID),
  CONSTRAINT fk_ticketcomment_ticket
    FOREIGN KEY (TicketNumber)
    REFERENCES ticket (TicketNumber),
  CONSTRAINT fk_ticketcomment_user
    FOREIGN KEY (UserID)
    REFERENCES user (UserID)
);

DROP TABLE IF EXISTS useractivity;
CREATE TABLE IF NOT EXISTS useractivity (
  ActivityID INT UNSIGNED NOT NULL AUTO_INCREMENT,
  UserID INT NOT NULL,
  ActivityType ENUM('login', 'logout', 'ticket_create', 'ticket_comment', 'ticket_inprogress', 'ticket_closed') NOT NULL,
  ActivityDate TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ActivityID),
  INDEX fk_useractivity_user (UserID),
  CONSTRAINT fk_useractivity_user
    FOREIGN KEY (UserID)
    REFERENCES user (UserID)
);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
